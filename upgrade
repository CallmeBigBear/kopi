#!/bin/bash
# VNNODE AUTO UPGRADE
if [[ $1 == "" ]]; then
    echo "ERROR: Enter new version | e.g. v14"
    exit
fi
GREEN="\e[1m\e[1;32m" # green color
RED="\e[1m\e[1;31m" # red color
BLUE='\033[0;34m'   # blue color
YELLOW="\e[1m\e[1;33m"  # yellow color
NC="\e[0m"          # no color
BINARY_VERSION=$1
BINARY_LINK="https://github.com/kopi-money/kopi/releases/download/$1/kopid-$1-linux-amd64"
DEST_HEIGHT=$2
RPC_PORT=$(grep -m 1 -oP '^laddr = "\K[^"]+' "$HOME/.kopid/config/config.toml" | cut -d ':' -f 3)
BINARY_LOCATION=$(which kopid)
if command -v jq &> /dev/null; then
    echo "jq INSTALLED"
else
    echo "INSTALLING jq..."
    apt update && apt install jq -y
fi
getOsArch() {
        a=`arch`
        str="aarch"
        result=$(echo $a | grep "${str}")
        if [[ "$result" != "" ]]
        then
                return 2;
        else
                return 1;
        fi
}
getOsArch
if [ $? -eq 2 ];then
  cd $HOME && rm kopi -r
  git clone https://github.com/kopi-money/kopi.git
  cd kopi
  cp $BINARY_LOCATION ./kopid_old
  git checkout $BINARY_VERSION
  make install
  cp $BINARY_LOCATION ./kopid_new
  mv ./kopid_old $BINARY_LOCATION
  echo -e "${GREEN}NEW VERSION READY FOR UPGRADE${NC}"
  ./kopid_new version
  sleep 5
  if [ $DEST_HEIGHT != 0 ]; then
    echo -e "${BLUE}HEIGHT TO UPGRADE: $DEST_HEIGHT ${NC}"
    while :
      do
        CURRENT_HEIGHT=$(curl -s localhost:$RPC_PORT/status | jq -r .result.sync_info.latest_block_height)
        [[ $CURRENT_HEIGHT == $DEST_HEIGHT ]] && mv .kopid_new $BINARY_LOCATION && systemctl restart kopid && echo -e "${GREEN}UPGRADE SUCCESSFULLY!!!${NC}" && break
        echo Block left: $((DEST_HEIGHT - CURRENT_HEIGHT))
        sleep 15
      done
  else
    mv .kopid_new $BINARY_LOCATION && systemctl restart kopid && echo "UPGRADE SUCCESSFULLY!!!"
  fi
else
  wget -O kopid $BINARY_LINK && chmod +x kopid
  echo "OLD VERSION:"
  kopid version
  echo "BINARY LOCATION FOUND: $BINARY_LOCATION"
  echo ""
  echo "NEW VERSION:"
  ./kopid version
  echo -e "${GREEN}NEW VERSION READY FOR UPGRADE${NC}"
  sleep 5
  if [ $DEST_HEIGHT != 0 ]; then
    printf "\033[91mHEIGHT TO UPGRADE: $DEST_HEIGHT \033[0m"
    while :
    do
      CURRENT_HEIGHT=$(curl -s localhost:$RPC_PORT/status | jq -r .result.sync_info.latest_block_height)
      [[ $CURRENT_HEIGHT == $DEST_HEIGHT ]] && mv kopid $BINARY_LOCATION && systemctl restart kopid && echo "UPGRADE SUCCESSFULLY!!!" && break
      echo Block left: $((DEST_HEIGHT - CURRENT_HEIGHT))
      sleep 15
    done
  else
    mv kopid $BINARY_LOCATION && systemctl restart kopid && echo "UPGRADE SUCCESSFULLY!!!"
  fi
fi
